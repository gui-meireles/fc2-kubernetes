apiVersion: apps/v1
kind: Deployment
metadata:
  name: goserver
  labels:
    app: goserver
spec:
  selector:
    matchLabels:
      app: goserver
  replicas: 1
  template:
    metadata:
      labels:
        app: "goserver"
    spec:
      containers:
        - name: goserver
          image: "guilhermemmnn/hello-go:v7"

          resources:
            requests:       # Delimita o mínimo que nosso container precisa para rodar, reservará no sistema a capacidade abaixo
              cpu: "0.1"
              memory: 20Mi
            limits:         # Delimita o máximo de processamento que nosso container terá
              cpu: "0.1"    # Divida esse valor pelo total de vCPU's que seu node possui, e você terá o total de replicas que ele suporta caso todas estejam no limite.
              memory: 25Mi

          startupProbe:
            httpGet:
              path: /healthz
              port: 8000
            periodSeconds: 3
            failureThreshold: 30

          readinessProbe:
            httpGet:
              path: /healthz
              port: 8000
            periodSeconds: 3
            failureThreshold: 1
            initialDelaySeconds: 10      # Aguarda X segundos para começar os testes do readinessProbe

          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000                # Porta da nossa aplicação
            periodSeconds: 5            # Período em segundos que ele executará um teste
            failureThreshold: 1         # Quantas vezes ele precisa falhar para reiniciar a aplicação
            timeoutSeconds: 1           # Limite em segundos para completar a requisição, caso não complete ele conta uma falha
            successThreshold: 1         # Quantas vezes a requisição precisa estar OK para encerrar o teste
            initialDelaySeconds: 15      # Aguarda X segundos para começar os testes do readinessProbe

          envFrom:
            - configMapRef:             # Puxa todas as variáveis de ambiente do arquivo abaixo para nossa aplicação
                name: goserver-env      # Nome do metadata que esta no arquivo configmap-env.yaml

            - secretRef:                # Puxa todas as secrets do arquivo abaixo para nossa aplicação
                name: goserver-secret   # Nome do metadata que esta no arquivo secret.yaml

          volumeMounts:
            - mountPath: "/go/myfamily"
              name: config
      volumes:
        - name: config
          configMap:
            name: configmap-family
            items:
              - key: members
                path: "family.txt"