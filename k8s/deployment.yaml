apiVersion: apps/v1
kind: Deployment
metadata:
  name: goserver
  labels:
    app: goserver
spec:
  selector:
    matchLabels:
      app: goserver
  replicas: 1
  template:
    metadata:
      labels:
        app: "goserver"
    spec:
      containers:
        - name: goserver
          image: "guilhermemmnn/hello-go:v6"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000                # Porta da nossa aplicação
            periodSeconds: 5            # Período em segundos que ele executará um teste
            failureThreshold: 1         # Quantas vezes ele precisa falhar para reiniciar a aplicação
            timeoutSeconds: 1           # Limite em segundos para completar a requisição, caso não complete ele conta uma falha
            successThreshold: 1         # Quantas vezes a requisição precisa estar OK para encerrar o teste
          envFrom:
            - configMapRef:             # Puxa todas as variáveis de ambiente do arquivo abaixo para nossa aplicação
                name: goserver-env      # Nome do metadata que esta no arquivo configmap-env.yaml

            - secretRef:                # Puxa todas as secrets do arquivo abaixo para nossa aplicação
                name: goserver-secret   # Nome do metadata que esta no arquivo secret.yaml

          volumeMounts:
            - mountPath: "/go/myfamily"
              name: config
      volumes:
        - name: config
          configMap:
            name: configmap-family
            items:
              - key: members
                path: "family.txt"